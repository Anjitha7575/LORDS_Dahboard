{"version":3,"sources":["features/Header/styles.js","constants/index.js","features/Login/SignIn/styles.js","features/Login/SignIn/component.js","actions/login.js","actionTypes.js","features/Login/SignIn/container.js","features/Login/styles.js","features/Login/component.js","features/Login/container.js","features/Header/component.js","features/Dashboard/styles.js","features/Dashboard/Contents/styles.js","features/Dashboard/Contents/component.js","features/Dashboard/Contents/container.js","features/Dashboard/Books/styles.js","features/Dashboard/Books/component.js","actions/books.js","features/Dashboard/Books/container.js","features/Dashboard/Movies/styles.js","features/Dashboard/SearchBar/styles.js","features/Dashboard/SearchBar/component.js","features/Dashboard/SearchBar/container.js","features/Dashboard/Movies/component.js","actions/movies.js","features/Dashboard/Movies/container.js","features/Dashboard/Character/styles.js","features/Dashboard/Character/component.js","features/Dashboard/Character/container.js","features/Dashboard/Quotes/styles.js","features/Dashboard/Quotes/component.js","features/Dashboard/Quotes/container.js","features/Dashboard/component.js","features/Dashboard/container.js","App.js","serviceWorker.js","reducers/booksReducer.js","reducers/index.js","index.js","assets/lord.png","assets/book.jpg","assets/lord10.jpg","assets/lord9.jpg","assets/lord13.jpg","assets/loading.gif","assets/movie.jpg"],"names":["HeaderMain","styled","div","HeaderImg","img","Leftpanel","HeaderImage","require","BooksImg","LoadingIcon","MovieIcon","SortMovieItems","name","key","order","SortCharsItems","MainBlock","ErrorField","Divider","styles","backgroundColor","color","SignIn","props","login","getLoginResponse","state","signUp","submitNewUsrs","changeEvent","ev","target","value","setState","showLoginStatus","loginData","status","checkValidation","userName","pswd","_isEmpty","nextProps","this","closeModal","submitUserResponse","className","type","placeholder","onChange","required","style","onClick","disabled","Component","loginProcess","obj","payload","submitProcess","setLocalData","dispatch","userLoginData","JSON","parse","localStorage","getItem","currentUser","setItem","stringify","connect","loginResponse","vals","validUser","map","user","push","concat","UserBlc","span","LoginBtn","button","modalStyle","content","top","left","right","bottom","marginRight","transform","LoginApp","logout","isModalOpen","userObj","_get","loggedIn","openModalHandler","bind","isOpen","ariaHideApp","onRequestClose","closeModalHandler","Header","src","MainTitle","Heading","ContentBox","Details","Contents","to","children","DocBox","BookBox","BookImg","BookName","BookLink","LoadingImg","Sub1","Sub2","Panel","Books","getChapterByBookId","bookId","index","getAllChaptersOfBook","showChaptersData","chapterData","chp","ind","showChpDataStatus","chapterStatus","alt","handleCategoryChange","category","console","log","getSortingEle","event","id","sortBookData","booksInfo","booksData","sort","a","b","_id","showId","getAllbooks","chaptersInfo","book","fetchAllBooks","data","fetchAllChaptersByBookId","chaptersOfBookId","fetch","method","then","res","json","response","catch","error","query","InfoVals","QuoteBox","InfoText","SearchBox","Icon","SearchBar","handleSearchChange","sendData","search","title","href","Movies","getQuotesByMovieId","movieId","getMovieByIdQuote","quoteData","dialog","quoteStatus","handleCategoryChange1","sortCategory","item","getSortingEle1","allMovies","childData","moviesInfo","moviesData","filter","toLowerCase","includes","handleClick","currentPage","Number","renderMoviesDetails","movie","runtimeInMinutes","academyAwardNominations","academyAwardWins","boxOfficeRevenueInMillions","budgetInMillions","showMainStatus","activePage","perPage","getAllMovies","allQuotesofMovieId","allDataMoviesStatus","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","pageNumbers","i","Math","ceil","length","renderPageNumbers","number","fetchAllMovies","fetchAllQuotesByMovieId","fetchAllCharacters","fetchAllQuotesByChar","fetchAllQuotes","getAllQuotesByChar","headers","BtnPag","Character","getQuotesBychrId","chrId","handleChange","allCharacters","gender","movieD1","character","birth","race","spouse","height","hair","death","realm","wikiUrl","prevPage","startPage","endPage","nextPage","dataLen","pageNo","getAllCharacters","allQuotesofChar","allMainStatus","Quotes","showQuoteStatus","allDataQuotes","getAllQuotes","allDataQuotesStatus","Dashboard","exact","path","component","App","Boolean","window","location","hostname","match","combineReducers","action","middlewares","compose","applyMiddleware","thunk","devToolsExtension","f","appStore","createStore","rootReducer","undefined","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f0f115c2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderMain = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const HeaderImg = styled.img`\n    width: 60px;\n    height: 60px;\n`;\n\nexport const Leftpanel = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin: -15px 20px;\n`;\n\nexport const MainTitle = styled.div`\n    \n`;","export const HeaderImage = require('../assets/lord.png');\n\nexport const BooksImg = require('../assets/book.jpg');\nexport const LordImage10 = require('../assets/lord10.jpg');\nexport const LordImage6 = require('../assets/lord9.jpg');\nexport const LordImage13 = require('../assets/lord13.jpg');\nexport const LoadingIcon = require('../assets/loading.gif');\nexport const MovieIcon = require('../assets/movie.jpg');\nexport const SortMovieItems = [\n    { name: 'Year', key: '_id', order: 'asc' },\n    { name: 'Most Award Wins', key: 'academyAwardWins', order: 'asc' },\n    { name: 'Most Award Nominations', key: 'academyAwardNominations', order: 'asc' },\n    { name: 'High Budget', key: 'budgetInMillions', order: 'asc' },\n    { name: 'More Box Office Success', key: 'boxOfficeRevenueInMillions', order: 'asc' },\n    { name: 'More Duration', key: 'runtimeInMinutes', order: 'asc' },\n    { name: 'Name', key: 'name', order: 'asc' }\n]\n\nexport const SortCharsItems = [\n    { name: 'Year', key: '_id', order: 'asc' },\n    { name: 'Birth', key: 'birth', order: 'asc' },\n    { name: 'Height', key: 'height', order: 'asc' },\n    { name: 'Death', key: 'death', order: 'asc' },\n]\n","import styled from 'styled-components';\n\nexport const MainBlock = styled.div`\n.form {border: 3px solid #f1f1f1;}\n\ninput[type=text], input[type=password] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\nbutton {\n  background-color: rgb(8, 167, 232);\n  color: white;\n  padding: 14px 20px;\n  margin: 8px 0;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  opacity: 0.8;\n}\n\n.cancelbtn {\n  width: auto;\n  padding: 10px 18px;\n  background-color: #f44336;\n}\n\n.imgcontainer {\n  text-align: center;\n  margin: 24px 0 12px 0;\n}\n\nimg.avatar {\n  width: 40%;\n  border-radius: 50%;\n}\n\n.container {\n  padding: 16px;\n}\n\nspan.psw {\n  float: right;\n  padding-top: 16px;\n}\n\n@media screen and (max-width: 300px) {\n  span.psw {\n     display: block;\n     float: none;\n  }\n  .cancelbtn {\n     width: 100%;\n  }\n}\n`;\n\nexport const ErrorField = styled.div`\n  padding-bottom: 18px;\n  text-align: center;\n  color: indianred;\n`;\n\nexport const Divider = styled.div`\n    width: 40px;\n    margin: 20px;\n    text-align: center;\n    color: #676767;\n`;","import React, { Component, Fragment } from 'react';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport {\n    MainBlock, ErrorField, Divider\n} from './styles';\n\nconst styles = {\n    buttonDisabled: {\n      backgroundColor: \"#ccc\",\n      color: \"#999\"\n    }\n  };\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { userName: '', pswd: '' }\n    }\n\n    login = () => {\n        this.props.getLoginResponse(this.state);\n    }\n\n    signUp = () => {\n        this.props.submitNewUsrs(this.state);\n    }\n    componentWillReceiveProps(nextProps) {\n        if ((nextProps.loginData.status === 'success')) {\n            this.props.closeModal();\n        }\n    }\n\n    changeEvent = (ev) => {\n        const { name, value } = ev.target;\n        this.setState({ [name]: value });\n    }\n\n    showLoginStatus = (loginData) => {\n        switch (loginData.status) {\n            case 'success':\n                return null;\n            case 'loading':\n                return 'loading...';\n            case 'error':\n                return <ErrorField>Username or Password Invalid!</ErrorField>;\n            default:\n                return null;\n        }\n    }\n\n    checkValidation = () => {\n        const { userName, pswd } = this.state;\n        if (!_isEmpty(userName) && !_isEmpty(pswd)) {\n            return false;\n        }\n        return true;\n    }\n\n\n    render() {\n        const { loginData, submitUserResponse } = this.props;\n        return (\n            <MainBlock>\n                <div className=\"form\">\n                    <div className=\"container\">\n                        <label><b>Username</b></label>\n                        <input type=\"text\" placeholder=\"Enter Username\" name=\"userName\" onChange={this.changeEvent} required />\n\n                        <label><b>Password</b></label>\n                        <input type=\"password\" placeholder=\"Enter Password\" name=\"pswd\" onChange={this.changeEvent} required />\n                        <div style={{ 'display': 'flex' }}>\n                            <button onClick={this.login}>Login</button>\n                            <Divider>/</Divider>\n                            <button style={\n                                (this.checkValidation())\n                                    ? {...styles.buttonDisabled }\n                                    : {}\n                            } disabled={this.checkValidation()} onClick={this.signUp}>SignUp</button>\n                        </div>\n\n                    </div>\n                    {!_isEmpty(loginData) && <Fragment>{this.showLoginStatus(loginData)}</Fragment>}\n                </div>\n            </MainBlock>\n        )\n    }\n}\n\nexport default SignIn;","import { LOGIN_PROCESS_LOADING, SUBMIT_PROCESS_LOADING } from '../actionTypes';\n\nexport const loginProcess = (status, obj) => ({\n    type: LOGIN_PROCESS_LOADING,\n    payload: { status: status, obj: obj }\n})\n\nexport const submitProcess = (status, obj) => ({\n    type: SUBMIT_PROCESS_LOADING,\n    payload: { status: status, obj: obj }\n})\n\nexport function setLocalData() {\n    return (dispatch) => {\n        let userLoginData = JSON.parse(localStorage.getItem('userLoginData'));\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n        dispatch(submitProcess('success', currentUser));\n        if (!userLoginData) {\n            let userArr = [{ 'userName': 'anji', 'pswd': 'anji' }, { 'userName': 'asw', 'pswd': 'asw' }]\n            localStorage.setItem('userLoginData', JSON.stringify(userArr));\n        }\n    }\n}\n\nexport function getLoginResponse(vals) {\n    const { userName, pswd } = vals;\n    const obj = { 'userName': userName, 'pswd': pswd };\n    let validUser = false;\n    return (dispatch) => {\n        dispatch(loginProcess('loading'));\n        let userLoginData = JSON.parse(localStorage.getItem('userLoginData'));\n        if (userLoginData) {\n            userLoginData.map((user) => {\n                if (user.userName === userName && user.pswd === pswd) {\n                    validUser = true;\n                    obj['loggedIn'] = true;\n                    dispatch(loginProcess('success', obj));\n                    localStorage.setItem('currentUser', JSON.stringify(obj));\n                    dispatch(submitProcess('success', obj));\n                    return;\n                }\n            });\n        }\n        if (!validUser) {\n            dispatch(loginProcess('error', validUser));\n        }\n    }\n}\n\nexport function submitNewUsrs(vals) {\n    const { userName, pswd } = vals;\n    const obj = { 'userName': userName, 'pswd': pswd };\n    return (dispatch) => {\n        dispatch(loginProcess('loading'));\n        let userLoginData = JSON.parse(localStorage.getItem('userLoginData'));\n        if(!userLoginData){\n            userLoginData = [].concat(obj);\n        }else{\n            userLoginData.push(obj);\n        }\n        obj['loggedIn'] = true;\n        localStorage.setItem('userLoginData', JSON.stringify(userLoginData));\n        dispatch(loginProcess('success', obj));\n        localStorage.setItem('currentUser', JSON.stringify(obj));\n        dispatch(submitProcess('success', obj));\n    }\n}\n\nexport function logout() {\n    return dispatch => {\n        localStorage.setItem('currentUser', JSON.stringify(null));\n        dispatch(submitProcess('success', null));\n    }\n}","export const FETCH_ALL_BOOKS = 'FETCH_ALL_BOOKS';\nexport const FETCH_ALL_CHAPTER_BOOKID = 'FETCH_ALL_CHAPTER_BOOKID';\nexport const FETCH_ALL_MOVIES = 'FETCH_ALL_MOVIES';\nexport const FETCH_ALL_QUOTES_MOVIEID = 'FETCH_ALL_QUOTES_MOVIEID';\nexport const FETCH_ALL_CHARACTERS = 'FETCH_ALL_CHARACTERS';\nexport const FETCH_ALL_QUOTE_CHARID = 'FETCH_ALL_QUOTE_CHARID';\nexport const FETCH_ALL_QUOTES = 'FETCH_ALL_QUOTES';\nexport const LOGIN_PROCESS_LOADING = 'LOGIN_PROCESS_LOADING';\nexport const SUBMIT_PROCESS_LOADING = 'SUBMIT_PROCESS_LOADING';\n","import { connect } from 'react-redux';\nimport SignIn from './component';\nimport { getLoginResponse, submitNewUsrs, setLocalData} from '../../../actions/login';\n\nconst mapStateToProps = (state) => ({\n    loginData: state.loginResponse,\n    submitUserResponse: state.submitUserResponse,\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setLocalData: () =>dispatch(setLocalData()),\n    getLoginResponse: (vals) => dispatch(getLoginResponse(vals)),\n    submitNewUsrs: (vals) => dispatch(submitNewUsrs(vals)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import styled from 'styled-components';\n\n\nexport const UserBlc = styled.span`\n    display: inline-block;\n    margin: 0 10px;\n    background-color: rgb(183, 137, 212);\n    color: white;\n    padding: 5px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    font-size: 12px;\n    margin-right: 10px;\n    border-radius: 10px;\n    font-weight: 500;\n`;\n\nexport const LoginBtn = styled.button`\n    background-color: rgb(54, 201, 208);\n    color: white;\n    padding: 5px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    font-size: 12px;\n`;","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\nimport SignIn from './SignIn/container';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport {\n    UserBlc, LoginBtn\n} from './styles';\n\nconst modalStyle = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nclass LoginApp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n    }\n\n    componentDidMount() {\n        this.props.setLocalData();\n    }\n\n    openModalHandler() {\n        this.setState({ isModalOpen: true });\n    }\n\n    logout =() =>{\n        this.props.logout();\n    }\n\n    closeModalHandler() {\n        this.setState({ isModalOpen: false });\n    }\n\n    render() {\n        const { submitUserResponse } = this.props;\n        const userObj = _get(submitUserResponse, 'obj', {});\n\n        return (\n            <div>\n                <h2>{this.props.name}</h2>\n                <div>{this.state.isModalOpen}</div>\n                <UserBlc>Hello {(!_isEmpty(userObj) && userObj.userName) ? userObj.userName : \"Friend\"}</UserBlc>\n                {(!_isEmpty(userObj) && userObj.loggedIn) ?\n                    <LoginBtn onClick={this.logout}>Logout</LoginBtn> :\n                    <LoginBtn onClick={this.openModalHandler.bind(this)}>Login</LoginBtn>\n                }\n                <ReactModal\n                    isOpen={this.state.isModalOpen}\n                    style={modalStyle}\n                    ariaHideApp={false}\n                    onRequestClose={this.closeModalHandler.bind(this)}>\n                    <div><SignIn  closeModal={this.closeModalHandler.bind(this)}/></div>\n                    <button onClick={this.closeModalHandler.bind(this)}>Close</button>\n                </ReactModal>\n            </div>\n        )\n    }\n}\n\nexport default LoginApp;","import { connect } from 'react-redux';\nimport LoginApp from './component';\nimport {setLocalData, logout} from '../../actions/login';\n\nconst mapStateToProps = (state) => ({\n    loginData: state.loginResponse,\n    submitUserResponse: state.submitUserResponse,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setLocalData: () => dispatch(setLocalData()),\n    logout:() => dispatch(logout())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginApp);","import React, {Component} from 'react';\nimport {HeaderMain, HeaderImg, Leftpanel, MainTitle} from './styles';\nimport {HeaderImage} from '../../constants';\nimport LoginApp from '../Login/container';\n\nclass Header extends Component{\n    render(){\n        return(\n            <HeaderMain>\n                <HeaderImg src={HeaderImage} />\n                <Leftpanel>\n                    <LoginApp/>\n                </Leftpanel>\n            </HeaderMain>\n        )\n    }\n}\n\nexport default Header;","import styled from 'styled-components';\n\nexport const MainTitle = styled.div`\n    \n`;\n\nexport const Heading = styled.div`\n    background-color: rgba(22, 23, 23, 0.12);\n    color: #f9f8f6;\n    padding: 5px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    font-size: 25px;\n    font-family: cursive;\n    font-weight: 900;\n    letter-spacing: 5px;\n`;","import styled from 'styled-components';\n\nexport const ContentBox = styled.div`\ndisplay: flex;\njustify-content: center;\nwidth: 100%;\n@media only screen and (max-width: 600px) {\nflex-direction :  column;\n}\n`;\n\nexport const Details = styled.div`\nwidth: 20%;\ntext-align: center;\nline-height: 35px;\nfont-size: 20px;\nborder: 6px solid #c9b5ab;\ndisplay: inline-block;\nbackground-color: rgba(137, 198, 212, 0.84);\ncolor: white;\npadding: 5px 20px;\nmargin: 8px 0;\nborder: none;\ncursor: pointer;\nmargin-right: 10px;\nborder-radius: 10px;\nfont-weight: 500;\na{color: antiquewhite;}\n\n@media only screen and (max-width: 600px) {\n    width: 100%;\n    margin: 5px 0 0 0;\n    text-align: center;\n    line-height: 100%;\n    font-size: 30px;\n  }\n  a{\n    text-decoration: none;\n    width: 100%;\n    display: block;\n  }\n`;\n\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { ContentBox, Details } from './styles';\n\nclass Contents extends Component {\n    constructor() {\n        super();\n    }\n    render() {\n        return (\n            <div>\n                <ContentBox>\n                    <Details><Link to='/movies'>Movies</Link></Details>\n                    <Details><Link to='/character'>Characters</Link></Details>\n                    <Details><Link to='/books'>Books</Link></Details>\n                    <Details><Link to='/quotes'>Quotes</Link></Details>\n                </ContentBox>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Contents;","import { connect } from 'react-redux';\nimport Contents from './component';\n// import { getAllBooks, getOneBook, getAllChaptersOfBook, getChapter, getAllMovies } from '../../actions/books';\n// import { getAllCharacters } from '../../actions/movies';\n\nconst mapDispatchToProps = (dispatch) => ({\n    // getAllbooks: () => dispatch(getAllBooks()),\n    // getOneBook: () => dispatchEvent(getOneBook()),\n    // getAllChaptersOfBook: () => dispatch(getAllChaptersOfBook()),\n    // getChapter: () => dispatch(getChapter()),\n    // getAllMovies: () => dispatch(getAllMovies()),\n    // getAllCharacters :()=>dispatch(getAllCharacters())\n})\n\nexport default connect(null, {})(Contents);","import styled from 'styled-components';\n\nexport const MainBlock = styled.div`\n    display: flex;\n    flex-direction: row;\n    background-color: #FFF;\n    margin: 0 2%;\n    border-radius: 5px;\n`;\n\nexport const DocBox = styled.div`\n    border: 1px solid #dcdcdc;\n    padding: 10px;\n    margin: 10px;\n    position: relative;\n    font-family: Bluu Next,serif;\n`;\n\nexport const BookBox = styled.div`\n    display: flex;\n`;\n\nexport const BookImg = styled.img`\n    width: 50px;\n    height: 50px;\n    border-radius: 50px;\n`;\n\nexport const BookName = styled.div`\n    font-size: 16px;\n    font-weight: 600;\n    color: darkcyan;\n    margin: 0 10px;\n    font-family: Bluu Next,serif;\n    text-align: left;\n`;\n\nexport const BookLink = styled.div`\n    margin-top: 10px;\n    color: #848282;\n    font-size: 13px;\n    cursor: pointer;\n`;\n\nexport const LoadingImg = styled.img`\n    width: 200px;\n    height: 200px;\n`;\n\nexport const Sub1 = styled.div`\n    flex: 1;\n`;\n\nexport const Sub2 = styled.div`\n    flex: 2;\n`;\n\nexport const Panel = styled.div`\n    height: 200px;\n    overflow-y: scroll;\n    padding: 20px;\n`;","import React, { Component, Fragment } from 'react';\nimport {\n    MainBlock, DocBox, BookImg, BookBox, Sub2,\n    BookName, BookLink, LoadingImg, Sub1, Panel,\n} from './styles';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport { BooksImg, LoadingIcon } from '../../../constants';\n\nclass Books extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showId: '',\n            category: 'Name'\n        }\n    }\n\n    componentDidMount() {\n        this.props.getAllbooks();\n        // this.props.getOneBook();\n        // this.props.getAllChaptersOfBook();\n        // this.props.getChapter();\n        // this.props.getAllMovies();\n        // this.props.getAllCharacters();\n    }\n\n    // componentWillReceiveProps() {\n    // }\n\n    getChapterByBookId = (bookId, index) => {\n        this.setState({ 'showId': index });\n        this.props.getAllChaptersOfBook(bookId);\n    }\n\n    showChaptersData = (chapterData) => {\n        if (_isEmpty(chapterData)) {\n            return null;\n        } else {\n            return (\n                <Fragment>\n                    {!_isEmpty(chapterData) && chapterData.map((chp, ind) =>\n                        <p key={ind}>Chapter {ind + 1}</p>\n                    )}\n                </Fragment>\n            )\n        }\n    }\n\n    showChpDataStatus = (chapterStatus, chapterData) => {\n        switch (chapterStatus) {\n            case 'success':\n                return <Fragment>{this.showChaptersData(chapterData)}</Fragment>;\n            case 'loading':\n                return <LoadingImg src={LoadingIcon} alt=\"Loading...\" />;\n            case 'error':\n                return <div>Something went wrong!!</div>;\n            default:\n                return null;\n        }\n    }\n\n    handleCategoryChange = (category) => {\n        this.setState({'category': category});\n        console.log('category', category);\n    }\n\n    getSortingEle = () => {\n        const {category} = this.state;\n        return (\n            <Fragment>\n                <select name=\"category\" value={category} onChange={event => this.handleCategoryChange(event.target.value)}>\n                    <option id=\"0\" >Name</option>\n                    <option id=\"1\" >Year</option>\n                </select>\n            </Fragment>\n        )\n    }\n\n    sortBookData = () =>{\n        const { booksInfo} = this.props;\n        const {category} = this.state;\n        let booksData = _get(booksInfo, 'data.docs', []);\n        if(category === 'Name'){\n            booksData = booksData.sort((a, b)=>(a.name > b.name ? 1: -1));\n        }else if(category === 'Year'){\n            booksData = booksData.sort((a, b)=>(a._id > b._id ? 1: -1));\n        }\n        return booksData;\n    }\n\n    render() {\n        const { chaptersInfo } = this.props;\n        const { showId } = this.state;\n        let booksData = this.sortBookData();\n        const chapterStatus = _get(chaptersInfo, 'status', []);\n        const chapterData = _get(chaptersInfo, 'data.docs', []);\n        return (\n            <MainBlock>\n                <Sub1><DocBox>Sort: {this.getSortingEle()}</DocBox></Sub1>\n                <Sub2>\n                    {!_isEmpty(booksData) && booksData.map((book, index) =>\n                        <DocBox key={index}>\n                            <BookBox>\n                                <BookImg src={BooksImg} alt={book.name} />\n                                <div style={{ 'marginLeft': '10px' }}>Name: </div>\n                                <BookName>\n                                    <div style={{ 'fontSize': '18px' }}>{book.name}</div>\n                                    <BookLink onClick={() => this.getChapterByBookId(book._id, index)}>\n                                        Check Out The Chapters...\n                                    </BookLink>\n                                    {(showId === index) && <Panel>\n                                        {this.showChpDataStatus(chapterStatus, chapterData)}\n                                    </Panel>}\n                                </BookName>\n                            </BookBox>\n                        </DocBox>)\n                    }\n                </Sub2>\n            </MainBlock>\n        )\n    }\n}\n\nexport default Books;","import { FETCH_ALL_BOOKS, FETCH_ALL_CHAPTER_BOOKID } from '../actionTypes';\n\nexport const fetchAllBooks = (status, data) => ({\n    type: FETCH_ALL_BOOKS,\n    payload: { 'status': status, 'data': data }\n});\n\nexport const fetchAllChaptersByBookId = (status, data) => ({\n    type: FETCH_ALL_CHAPTER_BOOKID,\n    payload: { 'status': status, 'data': data }\n});\n\nexport function getAllBooks() {\n    return dispatch => {\n        dispatch(fetchAllBooks('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/book', {\n            method: 'GET'\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllBooks('success', response));\n\n            }).catch(error => {\n                dispatch(fetchAllBooks('error', {}));\n            })\n    }\n}\n\nexport function getOneBook() {\n    return dispatch => {\n\n        fetch('https://the-one-api.herokuapp.com/v1/book/5cf5805fb53e011a64671582', {\n            method: 'GET',\n            query: 'hello'\n        })\n            .then(res => res.json())\n            .then(response => {\n                // console.log(response);\n                // dispatch(fetchAllChaptersByBookId('success', response));\n            }).catch(error => {\n                dispatch(fetchAllChaptersByBookId('error', {}));\n            })\n    }\n}\n\nexport function getAllChaptersOfBook(bookId) {\n    return dispatch => {\n        dispatch(fetchAllChaptersByBookId('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/book/' + bookId + '/chapter', {\n            method: 'GET',\n            query: 'hello'\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllChaptersByBookId('success', response));\n            }).catch(error => {\n                dispatch(fetchAllChaptersByBookId('error', {}));\n            })\n    }\n}\n\nexport function getChapter() {\n    return dispatch => (\n        fetch('https://the-one-api.herokuapp.com/v1/chapter/5cdc25d5bc17e929cf2461fc', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n                'Host': 'the-one-api.herokuapp.com'\n            }\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response);\n            })\n    )\n}\n\n","import { connect } from 'react-redux';\nimport Books from './component';\nimport { getAllBooks, getOneBook, getAllChaptersOfBook, getChapter } from '../../../actions/books';\n// import { getAllCharacters } from '../../actions/movies';\n\nconst mapStateToProps = (state) => ({\n    booksInfo: state.booksInfo,\n    chaptersInfo: state.chaptersOfBookId,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getAllbooks: () => dispatch(getAllBooks()),\n    // getOneBook: () => dispatchEvent(getOneBook()),\n    getAllChaptersOfBook: (bookId) => dispatch(getAllChaptersOfBook(bookId)),\n    // getChapter: () => dispatch(getChapter()),\n    // getAllMovies: () => dispatch(getAllMovies()),\n    // getAllCharacters :()=>dispatch(getAllCharacters())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);","import styled from 'styled-components';\n\nexport const MainBlock = styled.div`\n    display: flex;\n    flex-direction: row;\n    background-color: #FFF;\n    margin: 0 2%;\n    border-radius: 5px;\n    #page-numbers {\n        list-style: none;\n        display: flex;\n      }\n    .active{\n        background-color: #dfb959 !important;\n    }\n    #page-numbers > li {\n        margin-right: 0.6em;\n        color: #000;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: pointer;\n        background-color: #dcdcdc;\n        width: 20px;\n        border-radius: 5px;\n        height: 20px;\n        font-size: 12px;\n        font-weight: 500;\n        padding: 3px;\n    }\n`;\n\nexport const DocBox = styled.div`\n    border: 1px solid #dcdcdc;\n    padding: 10px;\n    margin: 10px;\n    position: relative;\n    font-family: Bluu Next,serif;\n`;\n\nexport const BookBox = styled.div`\n    display: flex;\n`;\n\nexport const BookImg = styled.img`\n    width: 50px;\n    height: 50px;\n    border-radius: 50px;\n`;\n\nexport const BookName = styled.div`\n    font-size: 16px;\n    font-weight: 600;\n    color: darkcyan;\n    margin: 0 10px;\n    font-family: Bluu Next,serif;\n    text-align: left;\n`;\n\nexport const BookLink = styled.div`\n    margin-top: 10px;\n    color: #848282;\n    font-size: 13px;\n    cursor: pointer;\n`;\n\nexport const LoadingImg = styled.img`\n    width: 200px;\n    height: 200px;\n`;\n\nexport const Sub1 = styled.div`\n    flex: 1;\n`;\n\nexport const Sub2 = styled.div`\n    flex: 2;\n`;\n\nexport const Panel = styled.div`\n    height: 200px;\n    overflow-y: auto;\n    padding: 20px;\n    border-top: 1px solid;\n    margin: 45px;\n`;\n\nexport const InfoVals = styled.div`\n    font-size: 14px;\n    margin : 0 0 10px 0;\n\n`;\n\nexport const QuoteBox = styled.div`\n    margin : 10px;\n    font-family: fantasy;\n    color: darkgoldenrod;\n    .q {\n        quotes: \"“\" \"”\" \"‘\" \"’\";\n    }\n    .q::before {\n        content: open-quote;\n    }\n    .q::after {\n        content: close-quote;\n    }\n`;\n\nexport const InfoText = styled.div`\n    font-size: 11px;\n    text-align: right;\n    display: flex;\n    flex-direction: column;\n`;\n","import styled from 'styled-components';\n\nexport const SearchBox = styled.div`\nwidth: 45%;\ndisplay: block;\nmargin: 0 auto;\n@media only screen and (max-width: 600px) {\n    width: 85%;\n    margin: 0 5px;\n}\n\ninput#search-bar{\n    margin: 0 auto;\n    width: 100%;\n    height: 50px;\n    padding: 0 20px;\n    font-size: 1rem;\n    border: 1px solid #dcdcdc;\n    border-radius: 25px;\n    outline: none;\n    // &:focus{\n    //   border: 1px solid #008ABF;\n    //   transition: 0.35s ease;\n    //   color: #008ABF;\n    //   &::-webkit-input-placeholder{\n    //     transition: opacity 0.45s ease; \n    //       opacity: 0;\n    //    }\n    //   &::-moz-placeholder {\n    //     transition: opacity 0.45s ease; \n    //       opacity: 0;\n    //    }\n    //   &:-ms-placeholder {\n    //    transition: opacity 0.45s ease; \n    //      opacity: 0;\n    //    }    \n    //  }\n   }\n  \n\n`;\n\nexport const Icon = styled.div`\n    color: #dcdcdc;\n    background-color: linear-gradient(45deg, #044348b3, #ad84397a);\n    font-size: 28px;\n    margin: 5px 10px 0 10px;\n    position: relative;\n    float: right;\n    top: -47px;\n    right: -17px;\n`;\n\n\n","import React, { Component } from 'react';\nimport { SearchBox, Icon } from './styles';\n\nclass SearchBar extends Component {\n    constructor() {\n        super();\n        this.state={\n            search :''\n        }\n    }\n    handleSearchChange = (ev) =>{\n        const {name, value} = ev.target;\n        this.setState({[name]:value});\n        this.props.sendData(value);\n    }\n\n    render() {\n        const {title} =this.props;\n        return (\n            <SearchBox>\n                <input type=\"text\" id=\"search-bar\" name=\"search\" onChange={this.handleSearchChange} placeholder={title} />\n                    <a href=\"#\"><Icon><i className=\"fas fa-search\"></i></Icon></a>\n            </SearchBox>\n        )\n    }\n}\n\nexport default SearchBar;","import { connect } from 'react-redux';\nimport SearchBar from './component';\n// import { getAllBooks, getOneBook, getAllChaptersOfBook, getChapter, getAllMovies } from '../../actions/books';\n// import { getAllCharacters } from '../../actions/movies';\n\nconst mapDispatchToProps = (dispatch) => ({\n    // getAllbooks: () => dispatch(getAllBooks()),\n    // getOneBook: () => dispatchEvent(getOneBook()),\n    // getAllChaptersOfBook: () => dispatch(getAllChaptersOfBook()),\n    // getChapter: () => dispatch(getChapter()),\n    // getAllMovies: () => dispatch(getAllMovies()),\n    // getAllCharacters :()=>dispatch(getAllCharacters())\n})\n\nexport default connect(null, {})(SearchBar);","import React, { Component, Fragment } from 'react';\nimport {\n    MainBlock, DocBox, BookImg, BookBox, Sub2,\n    BookName, BookLink, LoadingImg, Sub1, Panel,\n    InfoVals, QuoteBox, InfoText,\n} from './styles';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport SearchBar from '../SearchBar/container';\nimport { MovieIcon, LoadingIcon, SortMovieItems } from '../../../constants';\nimport { debounce } from '../../../utils';\n\nclass Movies extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showId: '',\n            activePage: 5,\n            currentPage: 1,\n            perPage: 3,\n            sortCategory: { name: '', value: '' },\n            SortMovieItems: SortMovieItems,\n            childData: ''\n        }\n    }\n\n    componentDidMount() {\n        this.props.getAllMovies();\n    }\n\n    getQuotesByMovieId = (movieId, index) => {\n        this.setState({ 'showId': index });\n        this.props.getMovieByIdQuote(movieId);\n    }\n\n    showChaptersData = (quoteData) => {\n        if (_isEmpty(quoteData)) {\n            return <div><i className=\"fas fa-star-half-alt\" style={{ 'color': 'orange' }}></i> Oops, No Information ...</div>;\n        } else {\n            return (\n                <Fragment>\n                    {!_isEmpty(quoteData) && quoteData.map((chp, ind) =>\n                        <QuoteBox key={ind}><p className=\"q\">{chp.dialog}</p></QuoteBox>\n                    )}\n                </Fragment>\n            )\n        }\n    }\n\n    showChpDataStatus = (quoteStatus, quoteData) => {\n        switch (quoteStatus) {\n            case 'success':\n                return <Fragment>{this.showChaptersData(quoteData)}</Fragment>;\n            case 'loading':\n                return <LoadingImg src={LoadingIcon} alt=\"Loading...\" />;\n            case 'error':\n                return <div>Something went wrong!!</div>;\n            default:\n                return null;\n        }\n    }\n\n    handleCategoryChange1 = (target) => {\n        let SortMovieItems = [...this.state.SortMovieItems];\n        let sortCategory = { ...this.sortCategory };\n        const { name, value } = target;\n        sortCategory['name'] = name;\n        sortCategory['value'] = value;\n        SortMovieItems.map((item) => {\n            if (item.name === name) {\n                item['order'] = value;\n            }\n        })\n        this.setState({ SortMovieItems });\n        this.setState({ sortCategory });\n    }\n\n    getSortingEle1 = () => {\n        const { SortMovieItems } = this.state;\n        return (\n            <Fragment>\n                {SortMovieItems.map((item, index) =>\n                    <DocBox key={index} id={index} style={{ 'display': 'flex' }}>\n                        <div style={{ 'flex': '1' }}>{item.name}</div>\n                        <div>\n                            <select name={item.name} value={item.order} onChange={event => this.handleCategoryChange1(event.target)}>\n                                <option id=\"0\" key=\"asc\" name=\"asc\" value=\"asc\" >Low to High</option>\n                                <option id=\"1\" key=\"des\" name=\"des\" value=\"des\" >High to Low</option>\n                            </select>\n                        </div>\n                    </DocBox>\n                )}\n            </Fragment>\n        )\n    }\n\n    sortBookData = () => {\n        const { allMovies } = this.props;\n        const { sortCategory, SortMovieItems, childData } = this.state;\n        let moviesInfo = _get(allMovies, 'data.docs', []);\n        let moviesData = [];\n        moviesData = moviesInfo.filter((obj) => {\n            if ((obj.name.toLowerCase()).includes(childData.toLowerCase())) {\n                return obj;\n            }\n        });\n        SortMovieItems.map((obj) => {\n            if (sortCategory.name === obj.name) {\n                moviesData = (sortCategory.value === 'asc') ? moviesData.sort((a, b) => (a[obj.key] > b[obj.key] ? 1 : -1)) :\n                    moviesData.sort((a, b) => (a[obj.key] > b[obj.key] ? -1 : 1));\n            }\n        });\n        return moviesData;\n    }\n\n    handleClick = (event) => {\n        this.setState({\n            currentPage: Number(event.target.id)\n        });\n    }\n\n    renderMoviesDetails = (movie) => {\n        return (\n            <Fragment>\n                <InfoVals>{movie.name}</InfoVals>\n                <InfoVals>Duration: {movie.runtimeInMinutes} minutes</InfoVals>\n                <InfoVals>Academy Award Nominations: {movie.academyAwardNominations}</InfoVals>\n                <InfoVals><i className=\"fas fa-award\" style={{ 'color': 'orange' }}></i> Academy Award Wins: {movie.academyAwardWins}</InfoVals>\n                <InfoVals>Box Office Revenue: {movie.boxOfficeRevenueInMillions} millions</InfoVals>\n                <InfoVals>Budget: {movie.budgetInMillions} millions</InfoVals>\n            </Fragment>\n        )\n    }\n\n    handleSearchChange = (data) => {\n        this.setState({ childData: data });\n    }\n\n    showMainStatus = (status) => {\n        switch (status) {\n            case 'success':\n                return null;\n            case 'loading':\n                return <LoadingImg src={LoadingIcon} alt=\"Loading...\" />;\n            case 'error':\n                return <div>Something went wrong!!</div>;\n            default:\n                return null;\n        }\n    }\n\n    render() {\n\n        const { allQuotesofMovieId, allMovies } = this.props;\n        const allDataMoviesStatus = _get(allMovies, 'status', []);\n        const { showId } = this.state;\n        let moviesData = this.sortBookData();\n        const quoteStatus = _get(allQuotesofMovieId, 'status', []);\n        const quoteData = _get(allQuotesofMovieId, 'data.docs', []);\n        const { currentPage, perPage } = this.state;\n        const indexOfLastTodo = currentPage * perPage;\n        const indexOfFirstTodo = indexOfLastTodo - perPage;\n        const currentTodos = moviesData.slice(indexOfFirstTodo, indexOfLastTodo);\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(moviesData.length / perPage); i++) {\n            pageNumbers.push(i);\n        }\n        const renderPageNumbers = pageNumbers.map(number => {\n            return (\n                <li\n                    key={number}\n                    id={number}\n                    className={(number === this.state.currentPage) ? 'active' : ''}\n                    onClick={this.handleClick}\n                >\n                    {number}\n                </li>\n            );\n        });\n\n        return (\n            <Fragment><InfoText>* Quotes available only for last two movies...</InfoText>\n                <MainBlock>\n                    <Sub1><DocBox>Sort Your Favorites {this.getSortingEle1()}</DocBox>\n                    </Sub1>\n                    <Sub2>\n                        <Fragment>\n                            <BookBox>\n                                <div style={{ 'margin': '18px -30px 0 10px' }}>Pages: </div>\n                                <div>  <ul id=\"page-numbers\">\n                                    {renderPageNumbers}\n                                </ul></div>\n                                <SearchBar title={\"Search your favorite movies...\"} sendData={this.handleSearchChange} />\n                            </BookBox>\n                        </Fragment>\n                        <Fragment>\n                            {!_isEmpty(currentTodos) && currentTodos.map((movie, index) =>\n                                <DocBox key={index}>\n                                    <BookBox>\n                                        <BookImg src={MovieIcon} alt={movie.name} />\n                                        <div style={{ 'marginLeft': '10px' }}>Movie Name: </div>\n                                        <BookName>\n                                            {this.renderMoviesDetails(movie)}\n                                            <BookLink onClick={() => this.getQuotesByMovieId(movie._id, index)}>\n                                                Check your favorite quotes...\n                                    </BookLink>\n                                            {(showId === index) && <Panel>\n                                                {this.showChpDataStatus(quoteStatus, quoteData)}\n                                            </Panel>}\n                                        </BookName>\n                                    </BookBox>\n                                </DocBox>)\n                            }\n                        </Fragment>\n                        <Fragment>\n                            {this.showMainStatus(allDataMoviesStatus)}\n                        </Fragment>\n                    </Sub2>\n\n                </MainBlock>\n            </Fragment>\n\n        )\n    }\n}\n\nexport default Movies;","import {\n    FETCH_ALL_MOVIES, FETCH_ALL_QUOTES_MOVIEID, FETCH_ALL_CHARACTERS,\n    FETCH_ALL_QUOTE_CHARID, FETCH_ALL_QUOTES\n} from '../actionTypes';\n\nexport const fetchAllMovies = (status, data) => ({\n    type: FETCH_ALL_MOVIES,\n    payload: { 'status': status, 'data': data }\n});\n\nexport const fetchAllQuotesByMovieId = (status, data) => ({\n    type: FETCH_ALL_QUOTES_MOVIEID,\n    payload: { 'status': status, 'data': data }\n});\n\nexport const fetchAllCharacters = (status, data) => ({\n    type: FETCH_ALL_CHARACTERS,\n    payload: { 'status': status, 'data': data }\n});\n\nexport const fetchAllQuotesByChar = (status, data) => ({\n    type: FETCH_ALL_QUOTE_CHARID,\n    payload: { 'status': status, 'data': data }\n});\n\nexport const fetchAllQuotes = (status, data) => ({\n    type: FETCH_ALL_QUOTES,\n    payload: { 'status': status, 'data': data }\n});\n\nexport function getAllMovies() {\n    return dispatch => {\n        dispatch(fetchAllMovies('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/movie', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n                'Host': 'the-one-api.herokuapp.com'\n            }\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllMovies('success', response));\n            }).catch(error => {\n                dispatch(fetchAllMovies('error', {}));\n            })\n    }\n}\n\nexport function getMovieByIdQuote(id) {\n    return dispatch => {\n        dispatch(fetchAllQuotesByMovieId('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/movie/' + id + '/quote', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n                'Host': 'the-one-api.herokuapp.com'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllQuotesByMovieId('success', response));\n            }).catch(error => {\n                dispatch(fetchAllQuotesByMovieId('error', {}));\n            })\n    }\n}\n\nexport function getMovieById(id) {\n    return dispatch => {\n        dispatch(fetchAllQuotesByMovieId('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/movie/' + id, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n                'Host': 'the-one-api.herokuapp.com'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllQuotesByMovieId('success', response));\n            }).catch(error => {\n                dispatch(fetchAllQuotesByMovieId('error', {}));\n            })\n    }\n}\n\nexport function getAllCharacters() {\n    return dispatch => {\n        dispatch(fetchAllCharacters('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/character', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n                'Host': 'the-one-api.herokuapp.com'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllCharacters('success', response));\n            }).catch(error => {\n                dispatch(fetchAllCharacters('error', {}));\n            })\n    }\n}\n\nexport function getAllQuotesByChar(id) {\n    return dispatch => {\n        dispatch(fetchAllQuotesByChar('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/character/' + id + '/quote', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n                'Host': 'the-one-api.herokuapp.com'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllQuotesByChar('success', response));\n            }).catch(error => {\n                dispatch(fetchAllQuotesByChar('error', {}));\n            })\n    }\n}\n\n// export function getCharacterByIdQuote() {\n//     return dispatch => (\n//         fetch('https://the-one-api.herokuapp.com/v1/character//quote', {\n//             method: 'GET',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json',\n//                 'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n//                 'Host': 'the-one-api.herokuapp.com'\n//             }\n//         })\n//             .then(res => res.json())\n//             .then(response => {\n//                 console.log(response);\n//             })\n//     )\n// }\n\nexport function getAllQuotes() {\n    return dispatch => {\n        dispatch(fetchAllQuotes('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/quote', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n                'Host': 'the-one-api.herokuapp.com'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllQuotes('success', response));\n            }).catch(error => {\n                dispatch(fetchAllQuotes('error', {}));\n            })\n    }\n}\n\nexport function getQuoteById(id) {\n    return dispatch => {\n        dispatch(fetchAllQuotesByChar('loading'));\n        fetch('https://the-one-api.herokuapp.com/v1/character/' + id + '/quote', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + 'EG3TEqzemX-Fngtazuii',\n                'Host': 'the-one-api.herokuapp.com'\n            }\n        }).then(res => res.json())\n            .then(response => {\n                console.log(response);\n                dispatch(fetchAllQuotesByChar('success', response));\n            }).catch(error => {\n                dispatch(fetchAllQuotesByChar('error', {}));\n            })\n    }\n}","import { connect } from 'react-redux';\nimport Movies from './component';\nimport { getAllMovies, getMovieByIdQuote } from '../../../actions/movies';\n\nconst mapStateToProps = (state) => ({\n    allMovies: state.allMovies,\n    allQuotesofMovieId: state.allQuotesofMovieId\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getAllMovies: () => dispatch(getAllMovies()),\n    getMovieByIdQuote: (id) => dispatch(getMovieByIdQuote(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","import styled from 'styled-components';\n\nexport const MainBlock = styled.div`\n    display: flex;\n    flex-direction: row;\n    background-color: #FFF;\n    margin: 0 2%;\n    border-radius: 5px;\n    #page-numbers {\n        list-style: none;\n        display: flex;\n      }\n    .active{\n        background-color: #dfb959 !important;\n    }\n    #page-numbers > li {\n        margin-right: 0.6em;\n        color: #000;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: pointer;\n        background-color: #dcdcdc;\n        width: 20px;\n        border-radius: 5px;\n        height: 20px;\n        font-size: 12px;\n        font-weight: 500;\n        padding: 3px;\n    }\n`;\n\nexport const DocBox = styled.div`\n    border: 1px solid #dcdcdc;\n    padding: 10px;\n    margin: 10px;\n    position: relative;\n    font-family: Bluu Next,serif;\n    .k_label{\n        margin: 0 10px;\n    }\n`;\n\nexport const BookBox = styled.div`\n    display: flex;\n`;\n\nexport const BookImg = styled.img`\n    width: 50px;\n    height: 50px;\n    border-radius: 50px;\n`;\n\nexport const BookName = styled.div`\n    font-size: 16px;\n    font-weight: 600;\n    color: darkcyan;\n    margin: 0 10px;\n    font-family: Bluu Next,serif;\n    text-align: left;\n`;\n\nexport const BookLink = styled.div`\n    margin-top: 10px;\n    color: #848282;\n    font-size: 13px;\n    cursor: pointer;\n`;\n\nexport const LoadingImg = styled.img`\n    width: 200px;\n    height: 200px;\n`;\n\nexport const Sub1 = styled.div`\n    flex: 1;\n`;\n\nexport const Sub2 = styled.div`\n    flex: 2;\n`;\n\nexport const Panel = styled.div`\n    height: 200px;\n    overflow-y: auto;\n    padding: 20px;\n    border-top: 1px solid;\n    margin: 45px;\n`;\n\nexport const InfoVals = styled.div`\n    font-size: 14px;\n    margin : 0 0 10px 0;\n\n`;\n\nexport const QuoteBox = styled.div`\n    margin : 10px;\n    font-family: fantasy;\n    color: darkgoldenrod;\n    .q {\n        quotes: \"“\" \"”\" \"‘\" \"’\";\n    }\n    .q::before {\n        content: open-quote;\n    }\n    .q::after {\n        content: close-quote;\n    }\n\n`;\n\nexport const BtnPag = styled.div`\n    background-color: #4CAF50;\n    border: none;\n    color: white;\n    padding: 5px 10px;\n    text-align: center;\n    -webkit-text-decoration: none;\n    text-decoration: none;\n    display: inline-block;\n    margin: -1px 10px 0 0;\n    cursor: pointer;\n    font-size: 13px;\n`;\n\n\n","import React, { Component, Fragment } from 'react';\nimport {\n    MainBlock, DocBox, BookImg, BookBox, Sub2,\n    BookName, BookLink, LoadingImg, Sub1, Panel,\n    InfoVals, QuoteBox, BtnPag,\n} from './styles';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport SearchBar from '../SearchBar/container';\nimport { MovieIcon, LoadingIcon, SortCharsItems } from '../../../constants';\n\nclass Character extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showId: '',\n            activePage: 5,\n            currentPage: 1,\n            perPage: 3,\n            sortCategory: { name: '', value: '' },\n            SortCharsItems: SortCharsItems,\n            childData: '',\n            startPage: 0,\n            endPage: 0,\n            gender:''\n        }\n    }\n\n    componentDidMount() {\n        const { activePage, endPage } = this.state;\n        this.props.getAllCharacters();\n        this.setState({ endPage: activePage });\n    }\n\n    getQuotesBychrId = (chrId, index) => {\n        this.setState({ 'showId': index });\n        this.props.getAllQuotesByChar(chrId);\n    }\n\n    showChaptersData = (quoteData) => {\n        if (_isEmpty(quoteData)) {\n            return <div><i className=\"fas fa-star-half-alt\" style={{ 'color': 'orange' }}></i> Oops, No Information ...</div>;\n        } else {\n            return (\n                <Fragment>\n                    {!_isEmpty(quoteData) && quoteData.map((chp, ind) =>\n                        <QuoteBox key={ind}><p className=\"q\">{chp.dialog}</p></QuoteBox>\n                    )}\n                </Fragment>\n            )\n        }\n    }\n\n    showChpDataStatus = (quoteStatus, quoteData) => {\n        switch (quoteStatus) {\n            case 'success':\n                return <Fragment>{this.showChaptersData(quoteData)}</Fragment>;\n            case 'loading':\n                return <LoadingImg src={LoadingIcon} alt=\"Loading...\" />;\n            case 'error':\n                return <div>Something went wrong!!</div>;\n            default:\n                return null;\n        }\n    }\n\n    handleCategoryChange1 = (target) => {\n        let SortCharsItems = [...this.state.SortCharsItems];\n        let sortCategory = { ...this.sortCategory };\n        const { name, value } = target;\n        sortCategory['name'] = name;\n        sortCategory['value'] = value;\n        SortCharsItems.map((item) => {\n            if (item.name === name) {\n                item['order'] = value;\n            }\n        })\n        this.setState({ SortCharsItems });\n        this.setState({ sortCategory });\n    }\n\n    handleChange = (ev) =>{\n        const {name, value} = ev.target;\n        this.setState({[name]: value});\n    }\n\n    getSortingEle1 = () => {\n        const { SortCharsItems } = this.state;\n        return (\n            <Fragment>\n                <div>\n                    <DocBox> Gender: \n                        <label className=\"k_label\"><input type=\"radio\" name=\"gender\" value=\"All\" className=\"k-radio\" onChange={this.handleChange} />All</label>\n                        <label className=\"k_label\"><input type=\"radio\" name=\"gender\" value=\"Male\" className=\"k-radio\" onChange={this.handleChange} />Male</label>\n                        <label className=\"k_label\"><input type=\"radio\" name=\"gender\" value=\"Female\" className=\"k-radio\" onChange={this.handleChange} />Female</label>\n                    </DocBox>\n                </div>\n                {SortCharsItems.map((item, index) =>\n                    <DocBox key={index} id={index} style={{ 'display': 'flex' }}>\n                        <div style={{ 'flex': '1' }}>{item.name}</div>\n                        <div>\n                            <select name={item.name} value={item.order} onChange={event => this.handleCategoryChange1(event.target)}>\n                                <option id=\"0\" key=\"asc\" name=\"asc\" value=\"asc\" >Low to High</option>\n                                <option id=\"1\" key=\"des\" name=\"des\" value=\"des\" >High to Low</option>\n                            </select>\n                        </div>\n                    </DocBox>\n                )}\n            </Fragment>\n        )\n    }\n\n    sortBookData = () => {\n        const { allCharacters } = this.props;\n        const { sortCategory, SortCharsItems, childData, gender } = this.state;\n        let moviesInfo = _get(allCharacters, 'data.docs', []);\n        let moviesData = [] , movieD1= [];\n        if(gender.toLowerCase() === 'male' || gender.toLowerCase() === 'female' ){\n            movieD1 = moviesInfo.filter((obj) => {\n                if (!_isEmpty(obj.gender) && ((obj.gender.toLowerCase()).includes(gender.toLowerCase()))) {\n                    return obj;\n                }\n            });\n        }else{\n            movieD1 = [...moviesInfo];\n        }\n        moviesData = movieD1.filter((obj) => {\n            if (!_isEmpty(obj.name) && ((obj.name.toLowerCase()).includes(childData.toLowerCase()))) {\n                return obj;\n            }\n        });\n        SortCharsItems.map((obj) => {\n            if (sortCategory.name === obj.name) {\n                moviesData = (sortCategory.value === 'asc') ? moviesData.sort((a, b) => (a[obj.key] > b[obj.key] ? 1 : -1)) :\n                    moviesData.sort((a, b) => (a[obj.key] > b[obj.key] ? -1 : 1));\n            }\n        });\n        return moviesData;\n    }\n\n    handleClick = (event) => {\n        this.setState({\n            currentPage: Number(event.target.id)\n        });\n    }\n\n    renderMoviesDetails = (character) => {\n        return (\n            <Fragment>\n                <InfoVals>{character.name}</InfoVals>\n                <InfoVals>Gender: {character.gender}</InfoVals>\n                <InfoVals>Birth: {character.birth}</InfoVals>\n                <InfoVals><i className=\"fas fa-hat-wizard\" style={{ 'color': '#f5052fba', 'fontSize': '25px' }}></i>Race: {character.race}</InfoVals>\n                <InfoVals>Spouse: {character.spouse}</InfoVals>\n                <InfoVals>Height: {character.height}</InfoVals>\n                <InfoVals>Hair: {character.hair}</InfoVals>\n                <InfoVals>Death: {character.death}</InfoVals>\n                <InfoVals>Realm: {character.realm}</InfoVals>\n                <InfoVals>wikiUrl: <a href={character.wikiUrl} target=\"_blank\">{character.wikiUrl}</a></InfoVals>\n            </Fragment>\n        )\n    }\n\n    handleSearchChange = (data) => {\n        this.setState({ childData: data });\n    }\n\n    prevPage = () => {\n        let { startPage, endPage, activePage } = this.state;\n        if (startPage < activePage || endPage < activePage) {\n            this.setState({ startPage: 0 });\n            this.setState({ endPage: activePage });\n        } else {\n            this.setState({ startPage: startPage - activePage });\n            this.setState({ endPage: endPage - activePage });\n        }\n    }\n\n    nextPage = () => {\n        const { allCharacters } = this.props;\n        let { startPage, endPage, activePage } = this.state;\n        let moviesInfo = _get(allCharacters, 'data.docs', []);\n        let dataLen = moviesInfo.length;\n        if (endPage < dataLen && startPage < dataLen) {\n            this.setState({ startPage: startPage + activePage });\n            this.setState({ endPage: endPage + activePage });\n        } else if (endPage > dataLen) {\n            this.setState({ startPage: dataLen - activePage });\n            this.setState({ endPage: dataLen });\n        }\n    }\n\n    renderPageNumbers = (pageNo) => {\n        const { startPage, endPage } = this.state;\n        const pageNumbers = pageNo.slice(startPage, endPage);\n        return (\n            <Fragment>\n                <BtnPag disabled={startPage <= 0} onClick={this.prevPage}>Prev</BtnPag>\n                {pageNumbers.map(number => {\n                    return (\n                        <li\n                            key={number}\n                            id={number}\n                            className={(number === this.state.currentPage) ? 'active' : ''}\n                            onClick={this.handleClick}\n                        >\n                            {number}\n                        </li>\n                    );\n                })}\n                <BtnPag disabled={endPage >= (pageNo.length)} onClick={this.nextPage}>Next</BtnPag>\n                <div style={{ 'fontSize': '12px','marginTop':'10px', color:'#08a7e8' }}>({pageNo.length} Pages)</div>\n            </Fragment>\n        )\n    }\n\n    showMainStatus = (status) => {\n        switch (status) {\n            case 'success':\n                return null;\n            case 'loading':\n                return <LoadingImg src={LoadingIcon} alt=\"Loading...\" />;\n            case 'error':\n                return <div>Something went wrong!!!</div>;\n            default:\n                return null;\n        }\n    }\n\n    render() {\n\n        const { allQuotesofChar, allCharacters } = this.props;\n        const allMainStatus = _get(allCharacters, 'status', []);\n        const { showId } = this.state;\n        let moviesData = this.sortBookData();\n        const quoteStatus = _get(allQuotesofChar, 'status', []);\n        const quoteData = _get(allQuotesofChar, 'data.docs', []);\n        const { currentPage, perPage } = this.state;\n        const indexOfLastTodo = currentPage * perPage;\n        const indexOfFirstTodo = indexOfLastTodo - perPage;\n        const currentTodos = moviesData.slice(indexOfFirstTodo, indexOfLastTodo);\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(moviesData.length / perPage); i++) {\n            pageNumbers.push(i);\n        }\n        return (\n\n            <MainBlock>\n                <Sub1><DocBox>Sort Your Favorites {this.getSortingEle1()}</DocBox>\n                </Sub1>\n                <Sub2>\n                    <Fragment>\n                        <BookBox>\n                            <div style={{ 'margin': '18px -30px 0 0px' }}></div>\n                            <div>  <ul id=\"page-numbers\">\n                                {this.renderPageNumbers(pageNumbers)}\n                            </ul></div>\n                            <SearchBar title={\"Search your favorite characters...\"} sendData={this.handleSearchChange} />\n                        </BookBox>\n                    </Fragment>\n                    <Fragment>\n                        {!_isEmpty(currentTodos) && currentTodos.map((character, index) =>\n                            <DocBox key={index}>\n                                <BookBox>\n                                    <BookImg src={MovieIcon} alt={character.name} />\n                                    <div style={{ 'marginLeft': '10px' }}>Character Name: </div>\n                                    <BookName>\n                                        {this.renderMoviesDetails(character)}\n                                        <BookLink onClick={() => this.getQuotesBychrId(character._id, index)}>\n                                            Check your favorite quotes...\n                                    </BookLink>\n                                        {(showId === index) && <Panel>\n                                            {this.showChpDataStatus(quoteStatus, quoteData)}\n                                        </Panel>}\n                                    </BookName>\n                                </BookBox>\n                            </DocBox>)\n                        }\n                    </Fragment>\n                    <Fragment>\n                            {this.showMainStatus(allMainStatus)}\n                        </Fragment>\n                </Sub2>\n\n            </MainBlock>\n        )\n    }\n}\n\nexport default Character;","import { connect } from 'react-redux';\nimport Character from './component';\nimport { getAllCharacters, getAllQuotesByChar  } from '../../../actions/movies';\n\nconst mapStateToProps = (state) => ({\n    allCharacters: state.allCharacters,\n    allQuotesofChar: state.allQuotesofChar\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getAllCharacters: () => dispatch(getAllCharacters()),\n    getAllQuotesByChar: (movieId) => dispatch(getAllQuotesByChar(movieId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Character);","import styled from 'styled-components';\n\nexport const MainBlock = styled.div`\n    display: flex;\n    flex-direction: row;\n    background-color: #FFF;\n    margin: 0 2%;\n    border-radius: 5px;\n    #page-numbers {\n        list-style: none;\n        display: flex;\n      }\n    .active{\n        background-color: #dfb959 !important;\n    }\n    #page-numbers > li {\n        margin-right: 0.6em;\n        color: #000;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: pointer;\n        background-color: #dcdcdc;\n        width: 20px;\n        border-radius: 5px;\n        height: 20px;\n        font-size: 12px;\n        font-weight: 500;\n        padding: 3px;\n    }\n`;\n\nexport const DocBox = styled.div`\n    border: 1px solid #dcdcdc;\n    padding: 10px;\n    margin: 10px;\n    position: relative;\n    font-family: Bluu Next,serif;\n    .k_label{\n        margin: 0 10px;\n    }\n`;\n\nexport const BookBox = styled.div`\n    display: flex;\n`;\n\nexport const BookImg = styled.img`\n    width: 50px;\n    height: 50px;\n    border-radius: 50px;\n`;\n\nexport const BookName = styled.div`\n    font-size: 16px;\n    font-weight: 600;\n    color: darkcyan;\n    margin: 0 10px;\n    font-family: Bluu Next,serif;\n    text-align: left;\n`;\n\nexport const BookLink = styled.div`\n    margin-top: 10px;\n    color: #848282;\n    font-size: 13px;\n    cursor: pointer;\n`;\n\nexport const LoadingImg = styled.img`\n    width: 200px;\n    height: 200px;\n`;\n\nexport const Sub1 = styled.div`\n    flex: 1;\n`;\n\nexport const Sub2 = styled.div`\n    flex: 2;\n`;\n\nexport const Panel = styled.div`\n    height: 200px;\n    overflow-y: auto;\n    padding: 20px;\n    border-top: 1px solid;\n    margin: 45px;\n`;\n\nexport const InfoVals = styled.div`\n    font-size: 14px;\n    margin : 0 0 10px 0;\n\n`;\n\nexport const QuoteBox = styled.div`\n    margin : 10px;\n    font-family: fantasy;\n    color: darkgoldenrod;\n    .q {\n        quotes: \"“\" \"”\" \"‘\" \"’\";\n    }\n    .q::before {\n        content: open-quote;\n    }\n    .q::after {\n        content: close-quote;\n    }\n\n`;\n\nexport const BtnPag = styled.div`\n    background-color: #4CAF50;\n    border: none;\n    color: white;\n    padding: 5px 10px;\n    text-align: center;\n    -webkit-text-decoration: none;\n    text-decoration: none;\n    display: inline-block;\n    margin: -1px 10px 0 0;\n    cursor: pointer;\n    font-size: 13px;\n`;\n\n\n","import React, { Component, Fragment } from 'react';\nimport {\n    MainBlock, DocBox, BookImg, BookBox, Sub2,\n    BookName, BookLink, LoadingImg, Sub1, Panel,\n    InfoVals, QuoteBox, BtnPag,\n} from './styles';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport SearchBar from '../SearchBar/container';\nimport { MovieIcon, LoadingIcon, SortCharsItems } from '../../../constants';\n\nclass Quotes extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showId: '',\n            activePage: 10,\n            currentPage: 1,\n            perPage: 10,\n            sortCategory: { name: '', value: '' },\n            SortCharsItems: SortCharsItems,\n            childData: '',\n            startPage: 0,\n            endPage: 0,\n            gender: ''\n        }\n    }\n\n    componentDidMount() {\n        const { activePage, endPage } = this.state;\n        this.props.getAllQuotes();\n        this.setState({ endPage: activePage });\n    }\n\n    getQuotesBychrId = (chrId, index) => {\n        this.setState({ 'showId': index });\n        this.props.getAllQuotesByChar(chrId);\n    }\n\n    showChaptersData = (quoteData) => {\n        if (_isEmpty(quoteData)) {\n            return <div><i className=\"fas fa-star-half-alt\" style={{ 'color': 'orange' }}></i> Oops, No Information ...</div>;\n        } else {\n            return (\n                <Fragment>\n                    {!_isEmpty(quoteData) && quoteData.map((chp, ind) =>\n                        <QuoteBox key={ind}><p className=\"q\">{chp.dialog}</p></QuoteBox>\n                    )}\n                </Fragment>\n            )\n        }\n    }\n\n    showChpDataStatus = (quoteStatus, quoteData) => {\n        switch (quoteStatus) {\n            case 'success':\n                return <Fragment>{this.showChaptersData(quoteData)}</Fragment>;\n            case 'loading':\n                return <LoadingImg src={LoadingIcon} alt=\"Loading...\" />;\n            case 'error':\n                return <div>Something went wrong!!</div>;\n            default:\n                return null;\n        }\n    }\n\n    showQuoteStatus = (quoteStatus) => {\n        switch (quoteStatus) {\n            case 'success':\n                return null;\n            case 'loading':\n                return <LoadingImg src={LoadingIcon} alt=\"Loading...\" />;\n            case 'error':\n                return <div>Something went wrong!!</div>;\n            default:\n                return null;\n        }\n    }\n\n    handleChange = (ev) => {\n        const { name, value } = ev.target;\n        this.setState({ [name]: value });\n    }\n\n    sortBookData = () => {\n        const { allDataQuotes } = this.props;\n        const { childData } = this.state;\n        let moviesInfo = _get(allDataQuotes, 'data.docs', []);\n        let moviesData =[];\n        moviesData = moviesInfo.filter((obj) => {\n            if (!_isEmpty(obj.dialog) && ((obj.dialog.toLowerCase()).includes(childData.toLowerCase()))) {\n                return obj;\n            }\n        });\n        return moviesData;\n    }\n\n    handleClick = (event) => {\n        this.setState({\n            currentPage: Number(event.target.id)\n        });\n    }\n\n    renderMoviesDetails = (character) => {\n        return (\n            <Fragment>\n                <QuoteBox ><p className=\"q\">{character.dialog}</p></QuoteBox>\n            </Fragment>\n        )\n    }\n\n    handleSearchChange = (data) => {\n        this.setState({ childData: data });\n    }\n\n    prevPage = () => {\n        let { startPage, endPage, activePage } = this.state;\n        if (startPage < activePage || endPage < activePage) {\n            this.setState({ startPage: 0 });\n            this.setState({ endPage: activePage });\n        } else {\n            this.setState({ startPage: startPage - activePage });\n            this.setState({ endPage: endPage - activePage });\n        }\n    }\n\n    nextPage = () => {\n        const { allDataQuotes } = this.props;\n        let { startPage, endPage, activePage } = this.state;\n        let moviesInfo = _get(allDataQuotes, 'data.docs', []);\n        let dataLen = moviesInfo.length;\n        if (endPage < dataLen && startPage < dataLen) {\n            this.setState({ startPage: startPage + activePage });\n            this.setState({ endPage: endPage + activePage });\n        } else if (endPage > dataLen) {\n            this.setState({ startPage: dataLen - activePage });\n            this.setState({ endPage: dataLen });\n        }\n    }\n\n    renderPageNumbers = (pageNo) => {\n        const { startPage, endPage } = this.state;\n        const pageNumbers = pageNo.slice(startPage, endPage);\n        return (\n            <Fragment>\n                <BtnPag disabled={startPage <= 0} onClick={this.prevPage}>Prev</BtnPag>\n                {pageNumbers.map(number => {\n                    return (\n                        <li\n                            key={number}\n                            id={number}\n                            className={(number === this.state.currentPage) ? 'active' : ''}\n                            onClick={this.handleClick}\n                        >\n                            {number}\n                        </li>\n                    );\n                })}\n                <BtnPag disabled={endPage >= (pageNo.length)} onClick={this.nextPage}>Next</BtnPag>\n                <div style={{ 'fontSize': '12px', 'marginTop': '10px', color: '#08a7e8' }}>({pageNo.length} Pages)</div>\n            </Fragment>\n        )\n    }\n\n    render() {\n\n        const { allDataQuotes } = this.props;\n        const allDataQuotesStatus = _get(allDataQuotes, 'status', []);\n        const { showId } = this.state;\n        let moviesData = this.sortBookData();\n        const quoteStatus = _get(allDataQuotes, 'status', []);\n        const quoteData = _get(allDataQuotes, 'data.docs', []);\n        const { currentPage, perPage } = this.state;\n        const indexOfLastTodo = currentPage * perPage;\n        const indexOfFirstTodo = indexOfLastTodo - perPage;\n        const currentTodos = moviesData.slice(indexOfFirstTodo, indexOfLastTodo);\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(moviesData.length / perPage); i++) {\n            pageNumbers.push(i);\n        }\n        return (\n\n            <MainBlock>\n                <Sub2>\n                    <Fragment>\n                        <BookBox>\n                            <div style={{ 'margin': '18px -30px 0 0px' }}></div>\n                            <div>  <ul id=\"page-numbers\">\n                                {this.renderPageNumbers(pageNumbers)}\n                            </ul></div>\n                            <SearchBar title={\"Search your favorite quotes...\"} sendData={this.handleSearchChange} />\n                        </BookBox>\n                    </Fragment>\n                    <Fragment>\n                        {!_isEmpty(currentTodos) && currentTodos.map((character, index) =>\n                            <DocBox key={index}>\n                                <BookBox>\n                                    <BookImg src={MovieIcon} alt={character.dialog} />\n                                    <BookName>\n                                        {this.renderMoviesDetails(character)}\n                                        {/* <BookLink onClick={() => this.getQuotesBychrId(character._id, index)}>\n                                            Check your favorite quotes...\n                                    </BookLink>\n                                        {(showId === index) && <Panel>\n                                            {this.showChpDataStatus(quoteStatus, quoteData)}\n                                        </Panel>} */}\n                                    </BookName>\n                                </BookBox>\n                            </DocBox>)\n                        }\n                    </Fragment>\n                    <Fragment>\n                        {this.showQuoteStatus(allDataQuotesStatus)}\n                    </Fragment>\n                </Sub2>\n\n            </MainBlock>\n        )\n    }\n}\n\nexport default Quotes;","import { connect } from 'react-redux';\nimport Quotes from './component';\nimport { getAllQuotes, getAllQuotesByChar  } from '../../../actions/movies';\n\nconst mapStateToProps = (state) => ({\n    allDataQuotes: state.allDataQuotes,\n    allQuotesofChar: state.allQuotesofChar\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getAllQuotes: () => dispatch(getAllQuotes()),\n    getAllQuotesByChar: (movieId) => dispatch(getAllQuotesByChar(movieId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quotes);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { MainTitle } from './styles';\nimport Contents from './Contents/container';\nimport Books from './Books/container';\nimport Movies from './Movies/container';\nimport Character from './Character/container';\nimport Quotes from './Quotes/container';\nimport {Heading} from './styles';\n\nclass Dashboard extends Component {\n    constructor() {\n        super();\n    }\n    render() {\n        return (\n            <MainTitle><Heading>Lord of the rings</Heading>\n                <Contents />\n                <Switch>\n                    <Route exact path='/' component={Movies} />\n                    <Route path='/books' component={Books} />\n                    <Route path='/movies' component={Movies} />\n                    <Route path='/character' component={Character} />\n                    <Route path='/quotes' component={Quotes} />\n                </Switch>\n            </MainTitle>\n        )\n    }\n}\n\nexport default Dashboard;","import { connect } from 'react-redux';\nimport Dashboard from './component';\n// import { getAllBooks, getOneBook, getAllChaptersOfBook, getChapter, getAllMovies } from '../../actions/books';\n// import { getAllCharacters } from '../../actions/movies';\n\nconst mapDispatchToProps = (dispatch) => ({\n    // getAllbooks: () => dispatch(getAllBooks()),\n    // getOneBook: () => dispatchEvent(getOneBook()),\n    // getAllChaptersOfBook: () => dispatch(getAllChaptersOfBook()),\n    // getChapter: () => dispatch(getChapter()),\n    // getAllMovies: () => dispatch(getAllMovies()),\n    // getAllCharacters :()=>dispatch(getAllCharacters())\n})\n\nexport default connect(null, mapDispatchToProps)(Dashboard);","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from './features/Header/component';\nimport Dashboard from './features/Dashboard/container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <BrowserRouter>\n        <Dashboard />\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {FETCH_ALL_BOOKS} from '../actionTypes';\n\nexport default function(state={},action){\n    switch(action.type){\n        case FETCH_ALL_BOOKS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport bookReducer from './booksReducer';\nimport {\n    FETCH_ALL_CHAPTER_BOOKID, FETCH_ALL_MOVIES,\n    FETCH_ALL_QUOTES_MOVIEID, FETCH_ALL_CHARACTERS,\n    FETCH_ALL_QUOTE_CHARID, FETCH_ALL_QUOTES,\n    LOGIN_PROCESS_LOADING, SUBMIT_PROCESS_LOADING\n} from '../actionTypes';\n\n\nconst chaptersOfBookId = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_ALL_CHAPTER_BOOKID:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\nconst allMovies = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_ALL_MOVIES:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\nconst allQuotesofMovieId = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_ALL_QUOTES_MOVIEID:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\nconst allCharacters = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_ALL_CHARACTERS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\nconst allQuotesofChar = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_ALL_QUOTE_CHARID:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\nconst allDataQuotes = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_ALL_QUOTES:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nconst loginResponse = (state = {}, action) => {\n    switch (action.type) {\n        case LOGIN_PROCESS_LOADING:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nconst submitUserResponse = (state = {}, action) => {\n    switch (action.type) {\n        case SUBMIT_PROCESS_LOADING:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    booksInfo: bookReducer,\n    chaptersOfBookId: chaptersOfBookId,\n    allMovies: allMovies,\n    allQuotesofMovieId: allQuotesofMovieId,\n    allCharacters: allCharacters,\n    allQuotesofChar: allQuotesofChar,\n    allDataQuotes: allDataQuotes,\n    loginResponse: loginResponse,\n    submitUserResponse: submitUserResponse\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nconst middlewares = compose(\n  applyMiddleware(thunk),\n  window.devToolsExtension ? window.devToolsExtension({ name: 'lordApp' }) : f => f\n);\n\nconst appStore = createStore(rootReducer, undefined, middlewares);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lord.f389754e.png\";","module.exports = __webpack_public_path__ + \"static/media/book.77ae0679.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lord10.54230ab1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lord9.cb4489cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lord13.6d20c56f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.b4a94b78.gif\";","module.exports = __webpack_public_path__ + \"static/media/movie.09cd4c1d.jpg\";"],"sourceRoot":""}